
https://tachingchen.com/blog/kubernetes-rolling-update-with-deployment/

kubectl apply -f nginx.yaml --record


set image:

  # format
$ kubectl set image deployment <deployment> <container>=<image> --record
# example
$ kubectl set image deployment nginx nginx=nginx:1.11.5 --record

replace:

  spec:
  containers:
  - name: nginx
    # newer image version
    image: nginx:1.11.5
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 80


kubectl replace -f <yaml> --record
# example
$ kubectl replace -f new-nginx.yaml --record


edit:
   # format
$ kubectl edit deployment <deployment> --record
# example
$ kubectl edit deployment nginx --record

  # Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: '{"kind":"Deployment","apiVersion":"extensions/v1beta1","metadata":{"name":"nginx","creationTimestamp":null},"spec":{"replicas":10,"template":{"metadata":{"creationTimestam
...
    spec:
      containers:
      - image: nginx:1.10.2
        imagePullPolicy: IfNotPresent
        name: nginx
...




Rollout Status

$ kubectl rollout status deployment nginx

Pause Rolling Update 
$ kubectl rollout pause deployment <deployment>
Resume Rolling Update 
 kubectl rollout resume deployment <deployment>
